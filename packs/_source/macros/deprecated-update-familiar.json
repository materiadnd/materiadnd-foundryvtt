{
  "name": "[deprecated] Update Familiar",
  "type": "script",
  "scope": "global",
  "author": "0lUbZH4eQxZ94yga",
  "img": "icons/svg/dice-target.svg",
  "command": "// NOTE: this is deprecated as it was created before summoning activities were introduced\n\n// helper function\n// takes a proficiency bonus value and returns the lowest CR that corresponds to that\n// (only goes from 2 to 6 as that is all players should ever have)\nfunction getCRforPB(profBonus) {\n\tif (profBonus <= 2){\n\t\treturn 0;\n\t} else if (profBonus == 3) {\n\t\treturn 5;\n\t} else if (profBonus == 4) {\n\t\treturn 9;\n\t} else if (profBonus == 5) {\n\t\treturn 13;\n\t} else {\n\t\treturn 17;\n\t}\n}\n\n// the actual familiar update portion, invoked via the forms below\nasync function updateFamiliar(name, token, familiarType, envType, spellLevel, profBonus, sam) {\n\tlet acBonus = 10 + spellLevel + (envType === 'Land' || envType === 'Water' ? 2 : 0);\n\tlet hpTotal = 2 + ((spellLevel - 1) * 2);\n\tconst actorUpdate = {\n\t\t'name': name,\n\t\t'system.attributes.ac.flat': acBonus,\n\t\t'system.attributes.hp.value': hpTotal,\n\t\t'system.attributes.hp.max': hpTotal,\n\t\t'system.details.type.value': familiarType.toLowerCase(),\n\t\t'system.details.cr': getCRforPB(profBonus),\n\t};\n\tlet damageType = \"\";\n\tif (familiarType === \"Celestial\") {\n\t\tdamageType = \"radiant\";\n\t} else if (familiarType === \"Fey\") {\n\t\tdamageType = \"psychic\";\n\t} else if (familiarType === \"Fiend\") {\n\t\tdamageType = \"necrotic\";\n\t}\n\t// remove existing otherworldly scratch\n\tlet existingScratchIds = token.actor.items.filter(x => x.name === 'Otherworldly Scratch').map(x => x.id);\n\ttoken.actor.deleteEmbeddedDocuments(\"Item\", existingScratchIds);\n\t// create new and add\n\tlet scratchItem = duplicate(await monsterFeaturesPack.getDocument(scratchFeatureId));\n\tscratchItem.system.attackBonus = sam;  // PB gets added automatically\n\tscratchItem.system.ability = \"none\";\n\tscratchItem.system.damage.parts = [[\"1 + \" + spellLevel, damageType]];\n\ttoken.actor.createEmbeddedDocuments(\"Item\", [scratchItem]);\n\t// apply env type updates\n\tif (envType === 'Land') {\n\t\t// no items to add for land\n\t\tactorUpdate['system.attributes.movement.climb'] = 30;\t\t\n\t\tactorUpdate['system.attributes.movement.fly'] = 0;\n\t\tactorUpdate['system.attributes.movement.swim'] = 0;\n\t} else if (envType === 'Air') {\n\t\tlet itemDocs = await Promise.all(airFeatures.map(async id => await monsterFeaturesPack.getDocument(id)));\n\t\ttoken.actor.createEmbeddedDocuments(\"Item\", itemDocs);\n\t\tactorUpdate['system.attributes.movement.climb'] = 0;\t\t\n\t\tactorUpdate['system.attributes.movement.fly'] = 30;\n\t\tactorUpdate['system.attributes.movement.swim'] = 0;\n\t} else if (envType === 'Water') {\n\t\tlet itemDocs = await Promise.all(waterFeatures.map(async id => await monsterFeaturesPack.getDocument(id)));\n\t\ttoken.actor.createEmbeddedDocuments(\"Item\", itemDocs);\n\t\tactorUpdate['system.attributes.movement.climb'] = 0;\t\t\n\t\tactorUpdate['system.attributes.movement.fly'] = 0;\n\t\tactorUpdate['system.attributes.movement.swim'] = 30;\n\t}\n\ttoken.actor.update(actorUpdate);\n\tconst docUpdate = {\n\t\t'name': name,\n\t\t'displayName': 20,\n\t\t'displayBars': 20,\n\t\t'disposition': 1,\n\t\t'sight.enabled': true\n\t};\n\ttoken.document.update(docUpdate);\n}\n\n// some constants and handy stuff for later\nconst dialogOptions = {\n    width: 650,\n\theight: 140,\n\tresizable: true\n}\nlet monsterFeaturesPack = game.packs.get(\"materia-dnd.monster-features\");\nconst waterFeatures = [\n\t\"n4xEhu8fIBgEOeeF\"\n];\nconst airFeatures = [\n\t\"OLSovOpvXIKWCJtv\"\n];\nconst scratchFeatureId = \"a2eQ1Oa5YERPKLqQ\";\n\n\n// we're modifying a token, so we need precisely one selected\nif (canvas.tokens.controlled.length != 1) {\n  ui.notifications.error(\"Select exactly one token to modify.\");\n  return;\n}\nlet selectedToken = canvas.tokens.controlled[0];\n\nif (game.user.isGM) {\n    // GM has control over all tokens and multiple players so allow them to select a player who cast the spell to pull the PB and spellcasting\n\t// ability modifier off of them instead of having to manually enter it\n\tlet actorTokens = canvas.tokens.ownedTokens.filter(x => x.actor.type === 'character').map(x => ({ 'id': x.actor.id, 'name': x.actor.name }));\n\tlet data = {};\n\tdata.actorTokens = actorTokens;\n\tnew Dialog({\n\t\ttitle: 'Find Familiar',\n\t\tcontent: await renderTemplate(\"modules/materia-dnd/templates/dialogs/find-familiar-gm.hbs\", data),\n\t\tbuttons: {\n\t\t  update: {\n\t\t\tlabel: \"Update Familiar\",\n\t\t\tcallback: (html) => {\n\t\t\t\tlet name = html.find('input[id=\\'name\\']').val();\n\t\t\t\tlet familiarType = html.find('select[id=\\'familiar-type\\']').val();\n\t\t\t\tlet envType = html.find('select[id=\\'environment-type\\']').val();\n\t\t\t\tlet spellLevel = parseInt(html.find('input[id=\\'spell-level\\']').val());\n\t\t\t\tlet caster = html.find('select[id=\\'actor\\']').val();\n\t\t\t\tlet casterActor = game.actors.get(caster);\n\t\t\t\tupdateFamiliar(name, selectedToken, familiarType, envType, spellLevel, casterActor.system.attributes.prof, casterActor.system.attributes.spellmod);\n\t\t\t}\n\t\t  }},\n\t\tdefault: 'update',\n\t\tclose: html => {\n\t\t\t\n\t\t}\n\t}, dialogOptions).render(true);\n} else {\n    // assume the player who is running the macro is using their associated player\n    let pcActor = game.actors.get(game.user.character.id);\n\tnew Dialog({\n\t\ttitle: 'Find Familiar',\n\t\tcontent: await renderTemplate(\"modules/materia-dnd/templates/dialogs/find-familiar-dialog.html\"),\n\t\tbuttons: {\n\t\t  update: {\n\t\t\tlabel: \"Update Familiar\",\n\t\t\tcallback: (html) => {\n\t\t\t\tlet name = html.find('input[id=\\'name\\']').val();\n\t\t\t\tlet familiarType = html.find('select[id=\\'familiar-type\\']').val();\n\t\t\t\tlet envType = html.find('select[id=\\'environment-type\\']').val();\n\t\t\t\tlet spellLevel = parseInt(html.find('input[id=\\'spell-level\\']').val());\n\t\t\t\tupdateFamiliar(name, selectedToken, familiarType, envType, spellLevel, pcActor.system.attributes.prof, pcActor.system.attributes.spellmod);\n\t\t\t}\n\t\t  }},\n\t\tdefault: 'update',\n\t\tclose: html => {\n\t\t\t\n\t\t}\n\t}, dialogOptions).render(true);\n}",
  "folder": null,
  "ownership": {
    "default": 0
  },
  "flags": {},
  "_stats": {
    "systemId": "dnd5e",
    "systemVersion": "3.0.3",
    "coreVersion": "12.331",
    "createdTime": 1709691641224,
    "modifiedTime": 1731227381147,
    "lastModifiedBy": "dnd5mbuilder0000",
    "duplicateSource": null
  },
  "_id": "e3HtULNs5CUtOFSg",
  "sort": 100000,
  "_key": "!macros!e3HtULNs5CUtOFSg"
}