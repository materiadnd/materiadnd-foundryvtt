name: Materia DnD CI

on:
  push:
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # Set up variables
    # Tag name: ${{ env.TAG_NAME }}
    # Zip name: ${{ env.ZIP_NAME }}
    # Release Download URL: ${{ env.RELEASE_DOWNLOAD_URL }}
    # Release module manifest: ${{ env.RELEASE_INSTALL_URL }}
    - name: Set up variables
      id: get_vars
      run: |
        TAG=${GITHUB_REF/refs\/tags\//}
        echo "TAG_NAME=$TAG" >> $GITHUB_ENV
        echo "ZIP_NAME=materia-dnd-$TAG.zip" >> $GITHUB_ENV
        echo "RELEASE_DOWNLOAD_URL=https://github.com/${{github.repository}}/releases/download/$TAG/materia-dnd-$TAG.zip" >> $GITHUB_ENV
        echo "RELEASE_INSTALL_URL=https://github.com/${{github.repository}}/releases/download/$TAG/module.json" >> $GITHUB_ENV

    # Set up Node
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install Dependencies
      run: npm ci

    # Run build script
    - name: Build All
      run: |
        npm run build:db
    
    # Create a zip file with all files required
    - run: zip ${{ env.ZIP_NAME }} -r icons images packs src templates tokens utils module.json --exclude "packs/_source/*"

    # Fetch the body from the release
    - name: Fetch Release Body
      id: release
      uses: cardinalby/git-get-release-action@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag: ${{ env.TAG_NAME }}
        doNotFailIfNotFound: true

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ env.TAG_NAME }}
        draft: false
        prerelease: true
        omitDraftDuringUpdate: true
        omitPrereleaseDuringUpdate: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./${{ env.ZIP_NAME }}'
        tag: ${{ env.TAG_NAME }}
        body: |
          ${{ steps.release.outputs.body }}

          **Installation:** To manually install this release, please use the following manifest URL: ${{ env.RELEASE_INSTALL_URL }}
