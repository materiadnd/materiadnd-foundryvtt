{
  "name": "Swap Land Circle Spells",
  "type": "script",
  "_id": "Xd4ewOCwoxlkZNGk",
  "author": "0lUbZH4eQxZ94yga",
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "var spellIdPrefix = \"Compendium.materia-dnd.spells.Item.\";\n\nconst flagScope = 'materia-dnd';\nconst flagKey = 'druid-land-circle';\n\nconst landSpellsByLevelAndCircle = {\n   3: {\n      \"arctic\": [\"matSplHoldPerson\", \"matSplSpikeGrowt\"],\n      \"coast\": [\"matSplMirrorImag\", \"matSplMistyStep0\"],\n      \"desert\": [\"matSplBlur000000\", \"matSplSilence000\"],\n      \"forest\": [\"matSplBarkskin00\", \"matSplSpiderClim\"],\n      \"grassland\": [\"matSplInvisibili\", \"matSplPassWithou\"],\n      \"mountain\": [\"matSplSpiderClim\", \"matSplSpikeGrowt\"],\n      \"swamp\": [\"matSplAcidArrow0\", \"matSplDarkness00\"],\n      \"underdark\": [\"matSplSpiderClim\", \"matSplWeb0000000\"]\n   },\n   5: {\n      \"arctic\": [\"matSplSleetStorm\", \"matSplSlow000000\"],\n      \"coast\": [\"matSplWaterBreat\", \"matSplWaterWall0\"],\n      \"desert\": [\"matSplCreateFood\", \"matSplProtFromEn\"],\n      \"forest\": [\"matSplCallLightn\", \"matSplPlantGrowt\"],\n      \"grassland\": [\"matSplDaylight00\", \"matSplHaste00000\"],\n      \"mountain\": [\"matSplLightningB\", \"matSplMeldIntoSt\"],\n      \"swamp\": [\"matSplStinkingCl\", \"matSplWaterWall0\"],\n      \"underdark\": [\"matSplGaseousFor\", \"matSplStinkingCl\"]\n   },\n   7: {\n      \"arctic\": [\"matSplFreedomOfM\", \"matSplIceStorm00\"],\n      \"coast\": [\"matSplControlWat\", \"matSplFreedomOfM\"],\n      \"desert\": [\"matSplBlight0000\", \"matSplHallucinat\"],\n      \"forest\": [\"matSplDivination\", \"matSplFreedomOfM\"],\n      \"grassland\": [\"matSplDivination\", \"matSplFreedomOfM\"],\n      \"mountain\": [\"matSplStoneShape\", \"matSplStoneskin0\"],\n      \"swamp\": [\"matSplFreedomOfM\", \"matSplLocateCrea\"],\n      \"underdark\": [\"matSplGreaterInv\", \"matSplStoneShape\"]\n   },\n   9: {\n      \"arctic\": [\"matSplCommuneWit\", \"matSplConeOfCold\"],\n      \"coast\": [\"matSplMislead000\", \"matSplScrying000\"],\n      \"desert\": [\"matSplSeeming000\", \"matSplWallOfSton\"],\n      \"forest\": [\"matSplCreation00\", \"matSplTreeStride\"],\n      \"grassland\": [\"matSplCreation00\", \"matSplTreeStride\"],\n      \"mountain\": [\"matSplDestructiv\", \"matSplPasswall00\"],\n      \"swamp\": [\"matSplScrying000\", \"matSplLocateCrea\"],\n      \"underdark\": [\"matSplCloudkill0\", \"matSplTelepathic\"]\n   }\n};\n\nasync function updateCircle(circle, actorId) {\n    let actor = game.actors.get(actorId);\n    let druidLevel = actor.classes?.druid?.system?.levels;\n    if (druidLevel == undefined || druidLevel < 3) {\n        ui.notifications.error(\"Actor \" + actor.name + \" does not have enough Druid levels to select a circle\");\n    }\n    let existingCircle = null;\n    try {\n        existingCircle = actor.getFlag(flagScope, flagKey);\n    } catch { }\n    if (circle == existingCircle) { return; }\n    actor.setFlag(flagScope, flagKey, circle);\n    // clamp it to 9 (the max level for spells)\n    druidLevel = Math.min(9, druidLevel);\n    let spellsToAdd = [];\n    let spellsToRemove = [];\n    while (druidLevel >= 3) {\n        console.log(\"Druid level: \" + druidLevel);\n        if (druidLevel in landSpellsByLevelAndCircle) {\n           spellsToAdd = spellsToAdd.concat(landSpellsByLevelAndCircle[druidLevel][circle]);\n           if (existingCircle != null) {\n               spellsToRemove = spellsToRemove.concat(landSpellsByLevelAndCircle[druidLevel][existingCircle]); \n           }\n        }\n        druidLevel--;\n    }\n    let idsToRemove = [];\n    for (var idx in spellsToRemove) {\n        let spellId = spellIdPrefix + spellsToRemove[idx];\n        let item = actor.items.find(x => 'materia-dnd' in x.flags && 'sourceId' in x.flags['materia-dnd'] && x.flags['materia-dnd']['sourceId'] == spellId);\n        if (item != undefined) {\n            idsToRemove.push(item._id);\n        }\n    }\n    await actor.deleteEmbeddedDocuments(\"Item\", idsToRemove);\n\n    let spellDocsToAdd = [];\n    for (var idx in spellsToAdd) {\n        var spellId = spellIdPrefix + spellsToAdd[idx];\n        spellDocsToAdd.push(await fromUuid(spellId));\n    }\n    await actor.createEmbeddedDocuments(\"Item\", spellDocsToAdd);\n}\n\nif (canvas.tokens.controlled.length == 0) { ui.notifications.error(\"You must select a token first.\"); }\nif (canvas.tokens.controlled.length > 1)  { ui.notifications.error(\"You must only select a single token.\"); }\n\nlet selectedToken = canvas.tokens.controlled[0];\nlet actor = selectedToken.actor;\nlet content = '<p>Changing Circle for Actor ' + actor.name + '</p><form><label>Circle:</label><select name=\"circle\" id=\"circle\"><option>Arctic</option><option>Coast</option><option>Desert</option><option>Forest</option><option>Grassland</option><option>Mountain</option><option>Swamp</option><option>Underdark</option></select></form>';\n\n\nconst dialogOptions = {\n    width: 250,\n    height: 130,\n    resizable: true\n};\n\nnew Dialog({\n    title: 'Select Land Circle',\n    content: content,\n    buttons: {\n        select: {\n            label: \"Select Circle\",\n            callback: (html) => {\n                let circle = html.find('select[id=\\'circle\\']').val();\n                updateCircle(circle.toLowerCase(), actorId);\n            }\n        }\n    },\n    default: 'select',\n    close: html => {}\n}, dialogOptions).render(true);",
  "folder": null,
  "sort": 0,
  "ownership": {
    "default": 0
  },
  "flags": {},
  "_stats": {
    "duplicateSource": null,
    "coreVersion": "12.331",
    "systemId": "dnd5e",
    "systemVersion": "4.3.6",
    "createdTime": 1742480792703,
    "modifiedTime": 1742596956223,
    "lastModifiedBy": "dnd5mbuilder0000"
  },
  "_key": "!macros!Xd4ewOCwoxlkZNGk"
}
